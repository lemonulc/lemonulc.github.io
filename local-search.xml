<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title></title>
    <link href="/2021/11/12/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/"/>
    <url>/2021/11/12/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/</url>
    
    <content type="html"><![CDATA[<h1 id="第一章-引论-ctrl-alt-f识别文字"><a href="#第一章-引论-ctrl-alt-f识别文字" class="headerlink" title="第一章 引论 ctrl+alt+f识别文字"></a>第一章 引论 ctrl+alt+f识别文字</h1><h2 id="1-1-小算法"><a href="#1-1-小算法" class="headerlink" title="1.1 小算法"></a>1.1 小算法</h2><p>从n个数中取第k个最大者</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-comment">//直接冒泡</span><br><span class="hljs-keyword">import</span> java.lang.Integer;<br><span class="hljs-keyword">public</span> <span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">BubbleSortTest</span></span>&#123;<br><span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">void</span> <span class="hljs-title">main</span><span class="hljs-params">(String[] args)</span> </span>&#123;<br>Integer[] arr = &#123;<span class="hljs-number">21</span>,<span class="hljs-number">453</span>,<span class="hljs-number">653</span>,<span class="hljs-number">6</span>,<span class="hljs-number">76</span>,<span class="hljs-number">23</span>,<span class="hljs-number">8</span>,<span class="hljs-number">2</span>,<span class="hljs-number">89</span>,<span class="hljs-number">90</span>&#125;;<br>System.out.println(BubbleSort.sort(arr,<span class="hljs-number">5</span>));<br>&#125;<br>&#125;<br><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">BubbleSort</span></span>&#123;<br><span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">int</span> <span class="hljs-title">sort</span><span class="hljs-params">(Integer[] arr, <span class="hljs-keyword">int</span> k)</span> </span>&#123;<br><span class="hljs-keyword">for</span> (<span class="hljs-keyword">int</span> i = <span class="hljs-number">0</span>; i &lt; arr.length; i++) &#123;<br><span class="hljs-keyword">for</span> (<span class="hljs-keyword">int</span> j = <span class="hljs-number">0</span>; j &lt; arr.length - i - <span class="hljs-number">1</span>; j++) &#123;<br><span class="hljs-keyword">if</span> (arr[j] &lt; arr[j + <span class="hljs-number">1</span>]) &#123;<br><span class="hljs-keyword">int</span> temp = arr[j];<br>arr[j] = arr[j+<span class="hljs-number">1</span>];<br>arr[j+<span class="hljs-number">1</span>] = temp;<br>&#125;<br>&#125;<br>&#125;<br><span class="hljs-keyword">return</span> arr[k-<span class="hljs-number">1</span>];<br>&#125;<br>&#125;<br></code></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-comment">//将前k个排序，再依次取后面的元素，如果取到的数比第k个大，则</span><br><span class="hljs-comment">//找到合适位置放入并挤出第k个元素</span><br><span class="hljs-keyword">public</span> <span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">PartSortTest</span></span>&#123;<br><span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">void</span> <span class="hljs-title">main</span><span class="hljs-params">(String[] args)</span> </span>&#123;<br>Integer[] arr = &#123;<span class="hljs-number">21</span>,<span class="hljs-number">453</span>,<span class="hljs-number">653</span>,<span class="hljs-number">6</span>,<span class="hljs-number">76</span>,<span class="hljs-number">23</span>,<span class="hljs-number">8</span>,<span class="hljs-number">2</span>,<span class="hljs-number">89</span>,<span class="hljs-number">90</span>&#125;;<br>System.out.println(PartSort.sort(arr,<span class="hljs-number">9</span>));<br>&#125;<br>&#125;<br><br><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">PartSort</span></span>&#123;<br><span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">int</span> <span class="hljs-title">sort</span><span class="hljs-params">(Integer[] arr,<span class="hljs-keyword">int</span> k)</span> </span>&#123;<br><span class="hljs-keyword">for</span> (<span class="hljs-keyword">int</span> i = <span class="hljs-number">0</span>; i &lt; k; i++) &#123;<br><span class="hljs-keyword">for</span> (<span class="hljs-keyword">int</span> j = <span class="hljs-number">0</span>; j &lt; k - i -<span class="hljs-number">1</span> ; j++) &#123;<br><span class="hljs-keyword">if</span> (arr[j] &lt; arr[j+<span class="hljs-number">1</span>]) &#123;<br><span class="hljs-keyword">int</span> temp = arr[j];<br>arr[j] = arr[j+<span class="hljs-number">1</span>];<br>arr[j+<span class="hljs-number">1</span>] = temp;<br>&#125;<br>&#125;<br>&#125;<br><span class="hljs-keyword">for</span> (<span class="hljs-keyword">int</span> i = k; i &lt; arr.length; i++) &#123;<br><span class="hljs-keyword">for</span> (<span class="hljs-keyword">int</span> j = k - <span class="hljs-number">1</span> ; j &gt; <span class="hljs-number">0</span>; j--) &#123;<br><span class="hljs-keyword">if</span> (arr[j] &lt; arr[i]) &#123;<br>arr[j] = arr[j-<span class="hljs-number">1</span>];<br>&#125; <span class="hljs-keyword">else</span> &#123;<br>arr[j+<span class="hljs-number">1</span>] = arr[i];<br><span class="hljs-keyword">break</span>;<br>&#125;<br>&#125;<br>&#125;<br><span class="hljs-keyword">return</span> arr[k-<span class="hljs-number">1</span>];<br>&#125;<br>&#125;<br></code></pre></td></tr></table></figure><h2 id="1-2-数学基础知识复习"><a href="#1-2-数学基础知识复习" class="headerlink" title="1.2 数学基础知识复习"></a>1.2 数学基础知识复习</h2><p>级数 归纳推理</p><h3 id="1-2-1-递归四法则"><a href="#1-2-1-递归四法则" class="headerlink" title="1.2.1 递归四法则"></a>1.2.1 递归四法则</h3><p>1.基准情况：必须要有一个已知的并且不需要递归的解</p><p>2.不断推进：求解时要不断向基准靠</p><p>3.设计法则：假设所有递归都能运行，不需要刻意证明</p><p>4.合成效益法则：在求解一个问题的同一个实例时，切勿在不同的递归中做                               重复性的工作</p><h2 id="1-4-协变性"><a href="#1-4-协变性" class="headerlink" title="1.4 协变性"></a>1.4 协变性</h2><p>数组有协变性，泛型以及泛型集合不是协变的(使用通配符解决问题)</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">void</span> <span class="hljs-title">total</span><span class="hljs-params">(Collection&lt;? extends Shape&gt; arr)</span></span>&#123;<br>    <br>&#125;<br></code></pre></td></tr></table></figure><h2 id="课后练习"><a href="#课后练习" class="headerlink" title="课后练习"></a>课后练习</h2><h3 id="解字谜游戏"><a href="#解字谜游戏" class="headerlink" title="解字谜游戏"></a>解字谜游戏</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">WordPuzzle</span> </span>&#123;<br>    <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">void</span> <span class="hljs-title">solution</span><span class="hljs-params">(<span class="hljs-keyword">char</span>[][] arr, String[] words)</span> </span>&#123;<br>        <span class="hljs-comment">//横正查找</span><br>        <span class="hljs-keyword">for</span> (<span class="hljs-keyword">int</span> x = <span class="hljs-number">0</span>; x &lt; arr.length; x++) &#123;<br>            <span class="hljs-keyword">for</span> (<span class="hljs-keyword">int</span> y = <span class="hljs-number">0</span>; y &lt; arr[<span class="hljs-number">0</span>].length; y++) &#123;<br>                StringBuilder front = <span class="hljs-keyword">new</span> StringBuilder();<br>                <span class="hljs-keyword">for</span> (<span class="hljs-keyword">int</span> z = y; z &lt; arr[<span class="hljs-number">0</span>].length; z++) &#123;<br>                    front.append(arr[x][z]);<br>                    <span class="hljs-keyword">for</span> (String word : words) &#123;<br>                        <span class="hljs-keyword">if</span> (word.equals(front.toString())) &#123;<br>                            System.out.println(front.toString());<br>                        &#125;<br>                    &#125;<br>                &#125;<br>            &#125;<br>        &#125;<br>        <span class="hljs-comment">//横反查找</span><br>        <span class="hljs-keyword">for</span> (<span class="hljs-keyword">int</span> x = <span class="hljs-number">0</span>; x &lt; arr.length; x++) &#123;<br>            <span class="hljs-keyword">for</span> (<span class="hljs-keyword">int</span> y = arr[<span class="hljs-number">0</span>].length - <span class="hljs-number">1</span>; y &gt;= <span class="hljs-number">0</span>; y--) &#123;<br>                StringBuilder front = <span class="hljs-keyword">new</span> StringBuilder();<br>                <span class="hljs-keyword">for</span> (<span class="hljs-keyword">int</span> z = y; z &gt;= <span class="hljs-number">0</span>; z--) &#123;<br>                    front.append(arr[x][z]);<br>                    <span class="hljs-keyword">for</span> (String word : words) &#123;<br>                        <span class="hljs-keyword">if</span> (word.equals(front.toString())) &#123;<br>                            System.out.println(front.toString());<br>                        &#125;<br>                    &#125;<br>                &#125;<br>            &#125;<br>        &#125;<br>        <span class="hljs-comment">//竖正</span><br>        <span class="hljs-keyword">for</span> (<span class="hljs-keyword">int</span> y = <span class="hljs-number">0</span>; y &lt; arr[<span class="hljs-number">0</span>].length; y++) &#123;<br>            <span class="hljs-keyword">for</span> (<span class="hljs-keyword">int</span> x = <span class="hljs-number">0</span>; x &lt; arr.length; x++) &#123;<br>                StringBuilder front = <span class="hljs-keyword">new</span> StringBuilder();<br>                <span class="hljs-keyword">for</span> (<span class="hljs-keyword">int</span> z = x; z &lt; arr.length; z++) &#123;<br>                    front.append(arr[z][y]);<br>                    <span class="hljs-keyword">for</span> (String word : words) &#123;<br>                        <span class="hljs-keyword">if</span> (word.equals(front.toString())) &#123;<br>                            System.out.println(front.toString());<br>                        &#125;<br>                    &#125;<br>                &#125;<br>            &#125;<br>        &#125;<br>        <span class="hljs-comment">//竖反</span><br>        <span class="hljs-keyword">for</span> (<span class="hljs-keyword">int</span> y = <span class="hljs-number">0</span>; y &lt; arr[<span class="hljs-number">0</span>].length; y++) &#123;<br>            <span class="hljs-keyword">for</span> (<span class="hljs-keyword">int</span> x = arr.length - <span class="hljs-number">1</span>; x &gt;= <span class="hljs-number">0</span>; x--) &#123;<br>                StringBuilder front = <span class="hljs-keyword">new</span> StringBuilder();<br>                <span class="hljs-keyword">for</span> (<span class="hljs-keyword">int</span> z = x; z &gt;= <span class="hljs-number">0</span>; z--) &#123;<br>                    front.append(arr[z][y]);<br>                    <span class="hljs-keyword">for</span> (String word : words) &#123;<br>                        <span class="hljs-keyword">if</span> (word.equals(front.toString())) &#123;<br>                            System.out.println(front.toString());<br>                        &#125;<br>                    &#125;<br>                &#125;<br>            &#125;<br>        &#125;<br>        <span class="hljs-comment">//正对角线正</span><br>        <span class="hljs-keyword">for</span> (<span class="hljs-keyword">int</span> x = <span class="hljs-number">0</span>; x &lt; arr.length; x++) &#123;<br>            StringBuilder front = <span class="hljs-keyword">new</span> StringBuilder();<br>            <span class="hljs-keyword">for</span> (<span class="hljs-keyword">int</span> z = x; z &lt; arr.length; z++) &#123;<br>                front.append(arr[z][z]);<br>                <span class="hljs-keyword">for</span> (String word : words) &#123;<br>                    <span class="hljs-keyword">if</span> (word.equals(front.toString())) &#123;<br>                        System.out.println(front.toString());<br>                    &#125;<br>                &#125;<br>            &#125;<br>        &#125;<br>        <span class="hljs-comment">//正对角线反</span><br>        <span class="hljs-keyword">for</span> (<span class="hljs-keyword">int</span> x = arr.length - <span class="hljs-number">1</span>; x &gt;= <span class="hljs-number">0</span>; x--) &#123;<br>            StringBuilder front = <span class="hljs-keyword">new</span> StringBuilder();<br>            <span class="hljs-keyword">for</span> (<span class="hljs-keyword">int</span> z = x; z &gt;= <span class="hljs-number">0</span>; z--) &#123;<br>                front.append(arr[z][z]);<br>                <span class="hljs-keyword">for</span> (String word : words) &#123;<br>                    <span class="hljs-keyword">if</span> (word.equals(front.toString())) &#123;<br>                        System.out.println(front.toString());<br>                    &#125;<br>                &#125;<br>            &#125;<br>        &#125;<br>        <span class="hljs-comment">//反对角线正</span><br>        <span class="hljs-keyword">for</span> (<span class="hljs-keyword">int</span> x = <span class="hljs-number">0</span>; x &lt; arr.length; x++) &#123;<br>            StringBuilder front = <span class="hljs-keyword">new</span> StringBuilder();<br>            <span class="hljs-keyword">for</span> (<span class="hljs-keyword">int</span> z = x; z &lt; arr.length; z++) &#123;<br>                front.append(arr[z][arr.length - z - <span class="hljs-number">1</span>]);<br>                <span class="hljs-keyword">for</span> (String word : words) &#123;<br>                    <span class="hljs-keyword">if</span> (word.equals(front.toString())) &#123;<br>                        System.out.println(front.toString());<br>                    &#125;<br>                &#125;<br>            &#125;<br>        &#125;<br>        <span class="hljs-comment">//反对角线反</span><br>        <span class="hljs-keyword">for</span> (<span class="hljs-keyword">int</span> x = arr.length - <span class="hljs-number">1</span>; x &gt;= <span class="hljs-number">0</span>; x--) &#123;<br>            StringBuilder front = <span class="hljs-keyword">new</span> StringBuilder();<br>            <span class="hljs-keyword">for</span> (<span class="hljs-keyword">int</span> z = x; z &gt;= <span class="hljs-number">0</span>; z--) &#123;<br>                front.append(arr[z][arr.length - z - <span class="hljs-number">1</span>]);<br>                <span class="hljs-keyword">for</span> (String word : words) &#123;<br>                    <span class="hljs-keyword">if</span> (word.equals(front.toString())) &#123;<br>                        System.out.println(front.toString());<br>                    &#125;<br>                &#125;<br>            &#125;<br>        &#125;<br>    &#125;<br>&#125;<br><br></code></pre></td></tr></table></figure><h3 id="PrintDigit"><a href="#PrintDigit" class="headerlink" title="PrintDigit"></a>PrintDigit</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-function"><span class="hljs-keyword">private</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">void</span> <span class="hljs-title">printDigit</span><span class="hljs-params">(<span class="hljs-keyword">int</span> n)</span> </span>&#123;<br>    <span class="hljs-keyword">if</span> (n / <span class="hljs-number">10</span> &gt; <span class="hljs-number">0</span>) &#123;<br>        <span class="hljs-keyword">throw</span> <span class="hljs-keyword">new</span> RuntimeException(<span class="hljs-string">&quot;只能输出1位数字&quot;</span>);<br>    &#125;<br>    System.out.print(n);<br>&#125;<br><br><span class="hljs-function"><span class="hljs-keyword">private</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">void</span> <span class="hljs-title">usePrintDigit</span><span class="hljs-params">(<span class="hljs-keyword">int</span> n)</span> </span>&#123;<br>    <span class="hljs-keyword">if</span> (Math.abs(n) &lt; <span class="hljs-number">10</span>) &#123;<br>        <span class="hljs-keyword">if</span> (n &lt; <span class="hljs-number">0</span>) &#123;<br>            System.out.print(<span class="hljs-string">&quot;-&quot;</span>);<br>        &#125;<br>        printDigit(Math.abs(n % <span class="hljs-number">10</span>));<br>    &#125; <span class="hljs-keyword">else</span> &#123;<br>        usePrintDigit(n / <span class="hljs-number">10</span>);<br>        printDigit(Math.abs(n % <span class="hljs-number">10</span>));<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><h3 id="求n的二进制中有多少个1"><a href="#求n的二进制中有多少个1" class="headerlink" title="求n的二进制中有多少个1"></a>求n的二进制中有多少个1</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">int</span> <span class="hljs-title">oneSum</span><span class="hljs-params">(<span class="hljs-keyword">int</span> num)</span> </span>&#123;<br>        <span class="hljs-keyword">if</span> (num == <span class="hljs-number">1</span>) &#123;<br>            <span class="hljs-keyword">return</span> <span class="hljs-number">1</span>;<br>        &#125;<br>        <span class="hljs-keyword">if</span> (num % <span class="hljs-number">2</span> == <span class="hljs-number">0</span>) &#123;<br>            <span class="hljs-keyword">return</span> oneSum(num / <span class="hljs-number">2</span>);<br>        &#125; <span class="hljs-keyword">else</span> &#123;<br>            <span class="hljs-keyword">return</span> oneSum(num / <span class="hljs-number">2</span>) + <span class="hljs-number">1</span>;<br>        &#125;<br>    &#125;<br><br><span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">int</span> <span class="hljs-title">oneSum</span><span class="hljs-params">(<span class="hljs-keyword">int</span> num)</span> </span>&#123;<br>        <span class="hljs-keyword">if</span> (num == <span class="hljs-number">1</span>) &#123;<br>            <span class="hljs-keyword">return</span> <span class="hljs-number">1</span>;<br>        &#125;<br>           <span class="hljs-keyword">return</span> oneSum(num / <span class="hljs-number">2</span>) + num%<span class="hljs-number">2</span>;<br>    &#125;<br></code></pre></td></tr></table></figure><h3 id="2-100mod5"><a href="#2-100mod5" class="headerlink" title="2^100mod5"></a>2^100mod5</h3><p>2^^(n+4)^%5 = 2^^n^%5</p><p>mod运算要找规律，看最后一位的数字</p><h1 id="通透"><a href="#通透" class="headerlink" title="通透"></a>通透</h1><p><img src="C:\Users\lemon\AppData\Roaming\Typora\typora-user-images\image-20210928220854423.png" alt="image-20210928220854423"></p>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>Hello World</title>
    <link href="/2021/11/12/hello-world/"/>
    <url>/2021/11/12/hello-world/</url>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo new <span class="hljs-string">&quot;My New Post&quot;</span><br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo server<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo generate<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo deploy<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
    
    
    
  </entry>
  
  
  
  
</search>
